{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/core/events/onTouchStart.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    $targetEl = $(eventPath[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n\n    if ($targetEl.is(data.focusableElements)) {\n      preventDefault = false;\n\n      if ($targetEl[0].nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n\n    if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n      e.preventDefault();\n    }\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}",
      "start": 1711509472953,
      "end": 1711509473475,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711509473475,
      "end": 1711509473475,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711509473475,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711509473476,
      "end": 1711509473476,
      "order": "normal"
    }
  ]
}
