{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/modules/effect-cube/effect-cube.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n      $slideEl.append(shadowBefore);\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n      $slideEl.append(shadowAfter);\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.each(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows($(slideEl), progress, isHorizontal);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, isHorizontal);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}",
      "start": 1711512699778,
      "end": 1711512701218,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711512701218,
      "end": 1711512701218,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711512701218,
      "end": 1711512701218,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711512701218,
      "end": 1711512701218,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711512701218,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711512701219,
      "end": 1711512701219,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711512701219,
      "end": 1711512701220,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711512701220,
      "end": 1711512701220,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711512701220,
      "end": 1711512701221,
      "order": "normal"
    }
  ]
}
