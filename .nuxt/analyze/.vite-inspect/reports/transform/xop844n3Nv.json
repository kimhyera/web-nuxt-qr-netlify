{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/core/modules/observer/observer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getWindow } from 'ssr-window';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}",
      "start": 1711511843590,
      "end": 1711511848410,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711511848410,
      "end": 1711511848410,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711511848410,
      "end": 1711511848410,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711511848410,
      "end": 1711511848410,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711511848411,
      "end": 1711511848411,
      "order": "normal"
    }
  ]
}
