{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/modules/parallax/parallax.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import $ from '../../shared/dom.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}",
      "start": 1711515378883,
      "end": 1711515381855,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711515381855,
      "end": 1711515381855,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711515381855,
      "end": 1711515381856,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711515381856,
      "end": 1711515381856,
      "order": "normal"
    }
  ]
}
