{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/core/events-emitter.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* eslint-disable no-underscore-dangle */\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};",
      "start": 1711508346052,
      "end": 1711508349513,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711508349513,
      "end": 1711508349513,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711508349513,
      "end": 1711508349514,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711508349514,
      "end": 1711508349514,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711508349514,
      "end": 1711508349514,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711508349514,
      "end": 1711508349514,
      "order": "normal"
    }
  ]
}
