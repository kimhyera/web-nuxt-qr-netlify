{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/core/loop/loopCreate.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    $wrapperEl\n  } = swiper; // Remove duplicated slides\n\n  const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n  $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  let slides = $selector.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $selector.append(blankNode);\n      }\n\n      slides = $selector.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n\n  if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n\n  for (let i = 0; i < swiper.loopedSlides; i += 1) {\n    const index = i - Math.floor(i / slides.length) * slides.length;\n    appendSlides.push(slides.eq(index)[0]);\n    prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n  }\n\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}",
      "start": 1711512709607,
      "end": 1711512711691,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711512711691,
      "end": 1711512711691,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711512711691,
      "end": 1711512711692,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711512711692,
      "end": 1711512711692,
      "order": "normal"
    }
  ]
}
