{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/core/breakpoints/setBreakpoint.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}",
      "start": 1711511852589,
      "end": 1711511855408,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711511855408,
      "end": 1711511855408,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711511855409,
      "end": 1711511855409,
      "order": "normal"
    }
  ]
}
