{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/modules/effect-cards/effect-cards.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}",
      "start": 1711512700635,
      "end": 1711512705243,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711512705243,
      "end": 1711512705243,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711512705243,
      "end": 1711512705244,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711512705244,
      "end": 1711512705244,
      "order": "normal"
    }
  ]
}
