{
  "resolvedId": "D:/localserver/web-nuxt-sdk/web-nuxt-qr-netlify/node_modules/swiper/vue/swiper-slide.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { h, ref, onMounted, onUpdated, onBeforeUpdate, computed, onBeforeUnmount, provide } from 'vue';\nimport { uniqueClasses } from '../components-shared/utils.js';\nconst SwiperSlide = {\n  name: 'SwiperSlide',\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    swiperRef: {\n      type: Object,\n      required: false\n    },\n    zoom: {\n      type: Boolean,\n      default: undefined\n    },\n    virtualIndex: {\n      type: [String, Number],\n      default: undefined\n    }\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    let eventAttached = false;\n    const {\n      swiperRef\n    } = props;\n    const slideElRef = ref(null);\n    const slideClasses = ref('swiper-slide');\n\n    function updateClasses(swiper, el, classNames) {\n      if (el === slideElRef.value) {\n        slideClasses.value = classNames;\n      }\n    }\n\n    onMounted(() => {\n      if (!swiperRef || !swiperRef.value) return;\n      swiperRef.value.on('_slideClass', updateClasses);\n      eventAttached = true;\n    });\n    onBeforeUpdate(() => {\n      if (eventAttached || !swiperRef || !swiperRef.value) return;\n      swiperRef.value.on('_slideClass', updateClasses);\n      eventAttached = true;\n    });\n    onUpdated(() => {\n      if (!slideElRef.value || !swiperRef || !swiperRef.value) return;\n\n      if (swiperRef.value.destroyed) {\n        if (slideClasses.value !== 'swiper-slide') {\n          slideClasses.value = 'swiper-slide';\n        }\n      }\n    });\n    onBeforeUnmount(() => {\n      if (!swiperRef || !swiperRef.value) return;\n      swiperRef.value.off('_slideClass', updateClasses);\n    });\n    const slideData = computed(() => ({\n      isActive: slideClasses.value.indexOf('swiper-slide-active') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-active') >= 0,\n      isVisible: slideClasses.value.indexOf('swiper-slide-visible') >= 0,\n      isDuplicate: slideClasses.value.indexOf('swiper-slide-duplicate') >= 0,\n      isPrev: slideClasses.value.indexOf('swiper-slide-prev') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-prev') >= 0,\n      isNext: slideClasses.value.indexOf('swiper-slide-next') >= 0 || slideClasses.value.indexOf('swiper-slide-duplicate-next') >= 0\n    }));\n    provide('swiperSlide', slideData);\n    return () => {\n      return h(props.tag, {\n        class: uniqueClasses(`${slideClasses.value}`),\n        ref: slideElRef,\n        'data-swiper-slide-index': props.virtualIndex\n      }, props.zoom ? h('div', {\n        class: 'swiper-zoom-container',\n        'data-swiper-zoom': typeof props.zoom === 'number' ? props.zoom : undefined\n      }, slots.default && slots.default(slideData.value)) : slots.default && slots.default(slideData.value));\n    };\n  }\n\n};\nexport { SwiperSlide };",
      "start": 1711507730860,
      "end": 1711507733306,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711507733306,
      "end": 1711507733306,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711507733306,
      "end": 1711507733307,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711507733307,
      "end": 1711507733307,
      "order": "normal"
    }
  ]
}
